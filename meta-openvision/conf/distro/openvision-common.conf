#@TYPE: Distribution
#@NAME: OpenVision
#@DESCRIPTION: Embedded Linux Distribution Configuration for STB's

require reporefs.conf
require preferred-provider-version.conf
require openvision-testers.conf

DISTRO_FEATURES_BACKFILL_CONSIDERED += "pulseaudio"

DISTRO_NAME = "openvision"
DISTRO_HOST ?= "${@os.uname()[1]}"
DISTRO_VERSION = "develop"
DISTRO_TYPE = "release"
BUILD_VERSION = "master"
DEVELOPER_BUILD_VERSION = "new"
VISIONVERSION = "10.1"
VISIONREVISION = "r147"
VISIONGCCVERSION = "10"

LANGUAGECHECK = "${@bb.utils.contains("MACHINE_FEATURES", "middleflash", "multilanguage", "extralanguage", d)}"
VISIONLANGUAGE = "${@bb.utils.contains("MACHINE_FEATURES", "smallflash", "english", "${LANGUAGECHECK}", d)}"

LIBEPLAYERCHECK = "${@bb.utils.contains("MACHINE_FEATURES", "libeplayer", "-libeplayer", "-gstreamer", d)}"
LIBEPLAYER = "${@bb.utils.contains("TARGET_ARCH", "sh4", "${LIBEPLAYERCHECK}", "", d)}"

MAINTAINER = "Open Vision Developers <forum.openvision.tech>"

PYTHONPATHVERSION = "python3.8"

IPKG_VARIANT = "opkg"

FEED_NAME ?= "${DISTRO_NAME}-${DISTRO_VERSION}"
DISTRO_FEED_URI ?= "http://${DISTRO_HOST}/feeds/${FEED_NAME}"
DISTRO_FEED_PREFIX ?= "${DISTRO_NAME}"

IMAGE_NAME = "${IMAGE_BASENAME}-${DISTRO_VERSION}-${VISIONLANGUAGE}${LIBEPLAYER}-${VISIONVERSION}-${VISIONREVISION}-${MACHINE}"
IMAGE_LINK_NAME = ""
CACHE ?= "${TMPDIR}/cache/${LIBC}/${MACHINE}"
DEPLOY_DIR ?= "${TMPDIR}/deploy/${LIBC}"
DEPLOY_DIR_IMAGE = "${DEPLOY_DIR}/images/${MACHINE}"

LICENSE_FLAGS_WHITELIST = "commercial"
COMMERCIAL_AUDIO_PLUGINS ?= "gst-plugins-ugly-mad gst-plugins-ugly-mpegaudioparse"
COMMERCIAL_VIDEO_PLUGINS ?= "gst-plugins-ugly-mpeg2dec gst-plugins-ugly-mpegstream gst-plugins-bad-mpegvideoparse"

# OE optimization defaults to -O2 which makes for much larger binaries.
# Override here to use -Os instead, resulting in smaller images.

# UPDATE: We don't support receivers with small flash anymore.
# So default to 02 for faster code
FULL_OPTIMIZATION = "-O2 -pipe ${DEBUG_FLAGS}"
# build some core libs with better compiler optimization for better performance
O2_OPT = "-O2 -pipe ${DEBUG_FLAGS}"
O3_OPT = "-O3 -pipe ${DEBUG_FLAGS}"
FULL_OPTIMIZATION_pn-glibc = "${O2_OPT}"
FULL_OPTIMIZATION_pn-nativesdk-glibc = "${O2_OPT}"
FULL_OPTIMIZATION_pn-flac = "${O3_OPT}"
FULL_OPTIMIZATION_pn-jpeg = "${O3_OPT}"
FULL_OPTIMIZATION_pn-lame = "${O3_OPT}"
FULL_OPTIMIZATION_pn-liba52 = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libdca = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libgcrypt = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libmad = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libogg = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libpng = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libsamplerate = "${O3_OPT}"
FULL_OPTIMIZATION_pn-libvorbis = "${O3_OPT}"
FULL_OPTIMIZATION_pn-tremor = "${O3_OPT}"
FULL_OPTIMIZATION_pn-zlib = "${O3_OPT}"

DISTRO_FEATURES = "bluez5 alsa bluetooth directfb ext2 ipv4 ipv6 largefile wifi nfs zeroconf pam openvision9 python3"

QA_LOGFILE = "${TMPDIR}/qa.log"

OEINCLUDELOGS ?= "yes"
KERNEL_CONSOLE ?= "ttyS0"

BB_GENERATE_MIRROR_TARBALLS ??= "0"

NO32LIBS ??= "1"

# Missing checksums should raise an error
BB_STRICT_CHECKSUM = "0"

# Place output in "tmp" as before, not "tmp-glibc"
TCLIBCAPPEND = ""

# Don't grab feeds for lower level archs, e.g. mips32el should not
# attempt to fetch mipsel, and armv7 need not fetch armv5 etcetera.
DISTRO_FEED_ARCHS = "all ${TUNE_PKGARCH} ${MACHINE_ARCH}"

# Use OpenSSL only
PACKAGECONFIG_pn-curl = "${@bb.utils.contains("DISTRO_FEATURES", "ipv6", "ipv6", "", d)} ssl proxy zlib libssh2"
PACKAGECONFIG_pn-openldap = "openssl modules mdb ldap meta monitor null passwd shell proxycache dnssrv ${@bb.utils.contains('DISTRO_FEATURES', 'ipv6', 'ipv6', '', d)}"
PACKAGECONFIG_pn-neon = "expat openssl libproxy webdav zlib"

# Allow java, svn and unzip executed on host
HOSTTOOLS += "glib-gettextize java python2 svn unzip"

VIRTUAL-RUNTIME_base-utils-hwclock = " "

FETCHCOMMAND_wget = "/usr/bin/env wget -T 10 -t 5 -nv --passive-ftp --no-check-certificate -P ${DL_DIR} '${URI}'"

WARN_QA_remove = "ldflags build-deps file-rdeps already-stripped installed-vs-shipped textrel"
